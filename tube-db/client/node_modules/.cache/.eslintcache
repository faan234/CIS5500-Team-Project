[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js":"5"},{"size":887,"mtime":1658800101984,"results":"6","hashOfConfig":"7"},{"size":3779,"mtime":1658703204671,"results":"8","hashOfConfig":"7"},{"size":256,"mtime":1658703204671,"results":"9","hashOfConfig":"7"},{"size":0,"mtime":1658703204671,"results":"10","hashOfConfig":"7"},{"size":0,"mtime":1658800109923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1445w12",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["24","25"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\n\nimport {\n    Table,\n    Row,\n    Col,\n    Divider,\n} from 'antd'\n\nimport { getChannel } from '../fetcher'\n\nclass TopChannelsPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            channelQuery: \"\",\n            queryResults: [],\n            selectedChannelDetails: null\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ channelQuery: event.target.value })\n    }\n\n    executeChannelSearch() {\n        getChannel(this.state.channelQuery).then(res => {    // \n            this.setState({ queryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n\n        })\n    }\n\n    componentDidMount() {\n        getChannel(\"neebsgaming\").then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Channel Name</label>\n                            <FormInput placeholder=\"Channel Name\" value={this.state.channelQuery} onChange={this.updateChannelSearchBar} />\n                        </FormGroup></Col>\n                        \n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.executeChannelSearch}>Execute Search</Button>\n                        </FormGroup></Col>\n                    </Row>\n                </Form>\n\n\n                <Divider />\n                {this.state.selectedChannelDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Card>\n                        <CardBody>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                <h5>Channel Title</h5>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                    <h5>Country</h5>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                <h5>Subcribers</h5>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                    <CardTitle>{this.state.selectedChannelDetails.channel_title}</CardTitle>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                <CardTitle>{this.state.selectedChannelDetails.country}</CardTitle>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                    <CardTitle>{this.state.selectedChannelDetails.subscribers}</CardTitle>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                    \n                </div> : null}\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage",["26","27"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js",[],{"ruleId":"28","severity":1,"message":"29","line":2,"column":73,"nodeType":"30","messageId":"31","endLine":2,"endColumn":81},{"ruleId":"28","severity":1,"message":"32","line":6,"column":5,"nodeType":"30","messageId":"31","endLine":6,"endColumn":10},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'Progress' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]