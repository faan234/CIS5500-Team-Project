[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"5","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js":"6","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js":"7","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js":"8","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js":"9","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js":"10","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js":"11","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js":"12","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js":"13","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js":"14"},{"size":1124,"mtime":1659333542267,"results":"15","hashOfConfig":"16"},{"size":0,"mtime":1658947787967,"results":"17","hashOfConfig":"16"},{"size":3526,"mtime":1659333594099,"results":"18","hashOfConfig":"16"},{"size":14470,"mtime":1659289363686,"results":"19","hashOfConfig":"16"},{"size":1724,"mtime":1659323453386,"results":"20","hashOfConfig":"16"},{"size":389,"mtime":1659312132512,"results":"21","hashOfConfig":"16"},{"size":881,"mtime":1659310858955,"results":"22","hashOfConfig":"16"},{"size":796,"mtime":1659309631966,"results":"23","hashOfConfig":"16"},{"size":768,"mtime":1659315873202,"results":"24","hashOfConfig":"16"},{"size":4425,"mtime":1659284600282,"results":"25","hashOfConfig":"16"},{"size":205,"mtime":1659299528877,"results":"26","hashOfConfig":"16"},{"size":313,"mtime":1659333377741,"results":"27","hashOfConfig":"16"},{"size":2481,"mtime":1659313666518,"results":"28","hashOfConfig":"16"},{"size":1747,"mtime":1659333860654,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1445w12",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",[],["65","66"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js",["67","68","69"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["70","71","72","73","74","75","76","77","78","79","80","81"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress, Container, CardSubtitle } from \"shards-react\";\nimport SideMenu from '../components/SideMenu';\nimport './TopChannels.css';\nimport TrendingVideoCard from '../components/TrendingVideoCard';\n\n//import { FixedSizeList as List } from \"react-window\";\n\nimport {\n    Table,\n    Row,\n    Col,\n    Divider,\n    Carousel\n} from 'antd'\n\nimport { getChannel, getFindChannels, getChannelRecentTrending } from '../fetcher'\nimport { Footer } from 'antd/lib/layout/layout';\n\nconst { Column, ColumnGroup } = Table;\n\n//add the case that values are negative (test abs. val and append - when negative) //perhaps make a utility.js file \nfunction numFormatter(num) {\n    let absNum = num;\n    \n    if(num < 0){\n        absNum = Math.abs(num);\n    }\n    if(absNum >= 1000 && absNum < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(absNum >= 1000000 && absNum < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(absNum >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(absNum < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\nfunction growthFormatter(deci){\n    let newNum = deci;\n    newNum*=100;\n    if (newNum>=0){\n        return \"+\" + newNum.toFixed(1) + \"%\";\n    }else{\n        return newNum.toFixed(1) + \"%\";\n    }\n}\n\nclass TopChannelsPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQuery: \"\",\n            channelsQuery: \"\",\n            selectedQueryResults: [],\n            channelsQueryResults: [],\n            selectedTrendingQueryResults: [],\n            selectedChannelDetails: null\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n        this.executeSelectedSearch = this.executeSelectedSearch.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ selectedQuery: event.target.value })\n    }\n\n    executeChannelSearch() {\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n    }\n\n    executeSelectedSearch(Ranking) {\n        getChannel(Ranking).then(res => {    // \n            this.setState({ selectedQueryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(Ranking).then(res => {    // \n            this.setState({ selectedTrendingQueryResults: res.results })\n        })\n\n        \n    }\n\n    componentDidMount() {\n\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n\n        getChannel(3430).then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n\n        getChannelRecentTrending(3430).then(res => {\n            this.setState({ selectedTrendingQueryResults: res.results });\n        })\n    }\n\n    ////////////////////////////////////////////////////\n    // Switch for number of recent trending (up to 5) //\n    ///////////////////////////////////////////////////\n    dynamicCarousel(){\n        switch(this.state.selectedTrendingQueryResults.length){\n            case 1: \n                return <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>;\n            case 2: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            </Carousel>;\n            case 3: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            </Carousel>;\n            case 4: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            </Carousel>;\n            case 5: \n                return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n                <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n            </Carousel>;\n\n            default: return <Carousel className='carousel' autoplay='true' dotPosition='right' effect='fade' autoplaySpeed={5000}>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[0]} num={0}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[1]} num={1}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[2]} num={2}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[3]} num={3}/>\n            <TrendingVideoCard data={this.state.selectedTrendingQueryResults[4]} num={4}/>\n        </Carousel>\n        }\n    }\n\n    render() {\n        return (\n            <div className='page'>\n\n                {/* <SideMenu /> */}\n\n                <div style={{ width: '70vw', margin: '0 auto' }}>\n                    <h1 className='pageTitle'>Top Channels Search</h1>\n                    <Table className='channelTable' onRow={(record, rowIndex) => {\n                        return {\n                        onClick: event => {this.executeSelectedSearch(record.Ranking)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                        };\n                        }} dataSource={this.state.channelsQueryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                                \n                                <Column className='channelTable' title=\"Ranking\" dataIndex=\"Ranking\" key=\"Ranking\" sorter= {(a, b) => a.Ranking-b.Ranking}/>\n                                <Column title=\"Title\" dataIndex=\"Title\" key=\"Title\" sorter= {(a, b) => a.Title.localeCompare(b.Title)}/>\n                                <Column title=\"Country\" dataIndex=\"country\" key=\"country\" sorter= {(a, b) => a.country.localeCompare(b.country)}/> {/* Need a way to deal with null here...*/}\n                                <Column title=\"Language\" dataIndex=\"language\" key=\"language\" sorter= {(a, b) => a.language.localeCompare(b.language)}/>\n                                \n                                <ColumnGroup title=\"Viewership\">\n                                    <Column title=\"Subscribers\" dataIndex=\"subscribers\" key=\"subscribers\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.subscribers-b.subscribers}/>\n                                    <Column title=\"Total Views\" dataIndex=\"views\" key=\"views\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.views-b.views}/>\n                                </ColumnGroup>\n                    </Table>\n                </div>\n\n\n\n                {/* Selected Channel will display via below structure */}\n                <Divider />\n                {this.state.selectedChannelDetails ? \n                \n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}> \n                    \n\n                    {/*    START OF SELECTED CHANNEL CONTAINER    */}    \n                    <h1 lex={2} className='selectedChannelName'>{this.state.selectedChannelDetails.channel_title}</h1>\n                        \n                    <Row className='selectedContainer'>\n\n                        {/*    START OF SELECTED CHANNEL STATS SECTION OF CONTAINER   */}    \n                        <Col className='channelStats' span={6}>\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'center', margin: '0rem', padding: '0rem'}}>\n                                    <h3 className='statTopTitle'>Channel<br></br>Statistics</h3>\n                                </Col>\n                            </Row>\n\n\n                            <Divider className='cardDivider'/>\n\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'center'}}>\n                                    <h4 className='statSectionTitle'>All Time</h4>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2}  style={{ textAlign: 'left' }}>\n                                        <p className='statTitle'>Views</p>\n                                </Col>\n                                <Col flex={2}  style={{ textAlign: 'right' }}>\n                                        <p className='statTitle'>Subs</p>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                    <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views)}</p>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                    <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers)}</p>\n                                </Col>\n                            </Row>\n\n\n\n                            <Divider className='cardDivider'/>\n\n\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                <h4 className='statSectionTitle'>Last 3 Months</h4>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2}  style={{ textAlign: 'left' }}>\n                                        <p className='statTitle'>Views</p>\n                                </Col>\n                                <Col flex={2}  style={{ textAlign: 'right' }}>\n                                        <p className='statTitle'>Subs</p>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                    <p className='statText'>{numFormatter(this.state.selectedChannelDetails.views_l3m)}\n                                        <br></br>\n                                        <p className={this.state.selectedChannelDetails.view_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                            {growthFormatter(this.state.selectedChannelDetails.view_growth_rate_l3m)}\n                                        </p>\n                                    </p>\n                                    \n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                    <p className='statText'>{numFormatter(this.state.selectedChannelDetails.subscribers_l3m)}\n                                        <br></br>\n                                        <p className={this.state.selectedChannelDetails.subscriber_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                        {growthFormatter(this.state.selectedChannelDetails.subscriber_growth_rate_l3m)}\n                                        </p>\n                                    </p>\n                                </Col>\n                            </Row>\n\n                            <Divider className='cardDividerBottom'/>\n\n                        </Col>\n\n                {/*    START OF TRENDING VIDEO SECTION OF CONTAINER    */}\n                        \n                        <Col className='recentTrendingContainer' span={18}>\n                            <Row className='trendingVideoSectionTitle'>\n                                <h3 className='trendingTopTitle'>Most Recent Trending Videos</h3>\n                            </Row>\n\n                                {this.state.selectedTrendingQueryResults == null || this.state.selectedTrendingQueryResults.length < 1 ?\n                                <Row className='noRecentTrends'>\n                                    <h3 className='noRecentTrendsText'>\n                                        No Recently Trending Videos\n                                    </h3>\n                                </Row>: <Row className='carouselSection'>\n                                        {this.dynamicCarousel()}\n                                    </Row>}\n                                \n                            \n                        </Col>\n                    </Row>\n                        \n                    {/* </Container> */}\n                    {/* <Footer></Footer> */}\n                    \n                </div> : null}\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js",["82","83"],"import React from \"react\";\nimport \"./NavbarItem.css\";\nimport navitemLogo from '../images/view-grid@2x.svg';\n\nfunction NavbarItem(props) {\n  const { text, className } = props;\n\n  return (\n    <div className>\n    <div className=\"nav-item\">\n      <img className=\"view-grid\" src={navitemLogo} />\n      <div className=\"text\">{text}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default NavbarItem;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js",["84","85","86","87","88","89","90"],"\nimport React, {useState} from 'react';\n\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\n\nimport './SideMenu.css';\n\n\nclass SideMenu extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n      <Nav justified>\n        <div className=\"sideMenuBar\">\n          <div className='header-labels'>\n          <NavbarItem text=\"Saved Videos\" href=\"#\"/>\n          <NavbarItem text=\"Trending Videos\" href=\"#\"/>\n          <NavbarItem text=\"Channels\" href=\"#\"/>\n          <NavbarItem text=\"Profile\" href=\"#\"/>\n        </div>\n        </div>\n      </Nav>\n    );\n  }\n}\n\n\nexport default SideMenu;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SearchBar.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderLogo.js",["91","92","93","94","95","96","97","98","99"],"\nimport React, {useState} from 'react';\n\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport NavbarItem from './NavbarItem';\nimport { Nav, NavItem, NavLink } from \"shards-react\";\nimport {Menu} from 'antd';\nimport TubeDBLogo from '../images/RedLogo.svg';\n\n\n\nclass HeaderLogo extends React.Component {\n  state = {\n    current: 'home',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render () {\n    return (\n      <Nav justified>\n        <div id=\"header\">\n        <div id=\"headerLogo\">\n          <a href=\"./homepage\">\n        <img src={TubeDBLogo} width={180} />\n        </a>\n        </div>\n        </div>\n      </Nav>\n    );\n  }\n}\n\n\nexport default HeaderLogo;\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/TrendingVideoCard.js",["100","101","102"],"import React from \"react\";\nimport \"./TrendingVideoCard.css\";\n\nimport {\n    Row,\n    Col\n} from 'antd'\n\n\n\n\nconst prototype = [{\"title\":\"I’ve Got a Huge Secret Hiding Behind This Fake Office\",\"published\":\"2022-06-15T04:00:00.000Z\",\"video_id\":\"h8g9wfI9nGI\",\"views\":9075972,\"trend_stop\":\"2022-06-18T04:00:00.000Z\",\"trend_start\":\"2022-06-16T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Pranks Destroy Scam Callers- GlitterBomb Payback\",\"published\":\"2022-05-08T04:00:00.000Z\",\"video_id\":\"xsLJZyih3Ac\",\"views\":30868590,\"trend_stop\":\"2022-05-17T04:00:00.000Z\",\"trend_start\":\"2022-05-09T04:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"},{\"title\":\"Robot Piano Catches Fire Playing Rush E (World’s Hardest Song)\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":9185225,\"trend_stop\":\"2022-03-27T04:00:00.000Z\",\"trend_start\":\"2022-03-27T04:00:00.000Z\",\"countries\":\"United Kingdom\"},{\"title\":\"This Piano Speaks English\",\"published\":\"2022-03-19T04:00:00.000Z\",\"video_id\":\"uBEL3YVzMwk\",\"views\":8014045,\"trend_stop\":\"2022-03-26T04:00:00.000Z\",\"trend_start\":\"2022-03-20T04:00:00.000Z\",\"countries\":\"Canada,Germany,United Kingdom,United States\"},{\"title\":\"World's Largest T-Shirt Cannon\",\"published\":\"2021-12-20T05:00:00.000Z\",\"video_id\":\"QiKZYt9070U\",\"views\":6387831,\"trend_stop\":\"2021-12-22T05:00:00.000Z\",\"trend_start\":\"2021-12-21T05:00:00.000Z\",\"countries\":\"Canada,Germany,India,United Kingdom,United States\"}];\n\n\nfunction TrendingVideoCard({data, num}) {\n\n    function numFormatter(num) {\n        if(num >= 1000 && num < 1000000){\n            return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n        }else if(num >= 1000000 && num < 1000000000){\n            return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n        }else if(num >= 1000000000){\n            return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n        }else if(num < 900){\n            return num; // if num < 1000, do nothing\n        }\n    }\n\n\n    console.log(data);\n    let record_data = data;\n    \n    let days = record_data.trend_stop - record_data.trend_stop;\n\n    let countries = \"\";\n\n    if(record_data.countries.includes(\",\")){\n        countries = (record_data.countries).split(\",\").join(\" \");\n    }else{\n        countries = record_data.countries\n    }\n    \n\n    const trend_start = new Date(record_data.trend_start.slice(0,19));\n    const trend_stop = new Date(record_data.trend_stop.slice(0,19));\n\n    const trend_duration_ms = trend_stop.getTime() - trend_start.getTime();\n    let trend_duration_hr = (trend_duration_ms / 3600000).toFixed(0);\n\n    let gradient = \"videoThumbnailSection\"+num;\n\n    if (trend_duration_hr < 24){\n        trend_duration_hr = '< 24'\n    }\n\n    let img_url = \"https://i.ytimg.com/vi/\"+ record_data.video_id + \"/hqdefault.jpg\";\n\n    return (\n        <div className=\"videoCard\">\n            <Row className='trendingVideoNameSection'>\n                <Col className='trendingVideoNameSection'>\n                    <Row className='videoTitleContainer'>\n                        <h4 className='videoTitle'>{record_data.title}</h4>\n                    </Row>\n                    \n                    <Row>\n                        <Col span={6}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Views:</b> {numFormatter(record_data.views)}</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Trending for:</b> {trend_duration_hr} hours</h5>\n                        </Col>\n                        <Col span={9}>\n                            <h5 className='videoData'><b className=\"videoDataTitle\">Published:</b> {record_data.published.slice(0,10)}</h5>\n                        </Col>\n                    </Row>\n                </Col>\n                \n            </Row>\n            \n            <Row className={gradient}>\n                <Col span={6}>\n                    <h5 className='videoDataCountries'><b className=\"videoDataTitle\">Countries:</b><br></br>{countries}</h5>\n                </Col>\n                <Col span={18}>\n                    <img className='videoTile' src={img_url}/>\n                </Col>\n            </Row>\n        </div>\n    );\n }\n\n \n\nexport default TrendingVideoCard;","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Grid.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/VideoThumbnail.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderBar.js",["103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, {useState} from 'react';\nimport './Grid.css';\nimport './HeaderBar.css';\nimport HeaderLogo from '../components/HeaderLogo';\nimport SearchBar from '../components/SearchBar';\nimport { DatePicker, Space } from 'antd';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FrownOutlined, SmileOutlined } from '@ant-design/icons';\nimport {\n    Table,\n    Pagination,\n    Select,\n    Slider\n  } from 'antd'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst IconSlider = (props) => {\nconst { max, min } = props;\nconst [value, setValue] = useState(0);\nconst mid = Number(((max - min) / 2).toFixed(5));\nconst preColorCls = value >= mid ? '' : 'icon-wrapper-active';\nconst nextColorCls = value >= mid ? 'icon-wrapper-active' : '';\nreturn (\n    <div className=\"icon-wrapper\">\n    <FrownOutlined className={preColorCls} />\n    <Slider {...props} onChange={setValue} value={value} />\n    <SmileOutlined className={nextColorCls} />\n    </div>\n);\n};\n\n\nclass HeaderBar extends React.Component {\n\n    render(){\n        return(\n          <div className=\"headerBar\">\n\n              <div className=\"headerLogo\">\n                <HeaderLogo />\n              </div>\n\n              <div className=\"headerExLogo\">\n\n                <div className=\"headerSearch\">\n                  <SearchBar />\n                </div>\n              \n                <div className=\"headerSelectors\">\n                  <Select defaultValue=\"United States\" id=\"countrySelector\" onChange=\"\">\n                      <Option value=\"Brazil\">Brazil</Option>\n                        <Option value=\"Canada\">Canada</Option>\n                        <Option value=\"France\">France</Option>\n                        <Option value=\"Germany\">Germany</Option>\n                        <Option value=\"India\">India</Option>\n                        <Option value=\"Japan\">Japan</Option>\n                        <Option value=\"Mexico\">Mexico</Option>\n                        <Option value=\"Russia\">Russia</Option>\n                        <Option value=\"SouthKorea\">South Korea</Option>\n                        <Option value=\"UnitedKingdom\">United Kingdom</Option>\n                        <Option value=\"UnitedStates\">United States</Option>\n                    </Select>\n                    <RangePicker />\n                  </div>\n               </div>\n          </div>\n        )\n    }\n}\n\nexport default HeaderBar\n\n\n","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/VideoPage.js",["116","117","118","119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":14,"column":9,"nodeType":"130","messageId":"131","endLine":14,"endColumn":15},{"ruleId":"128","severity":1,"message":"132","line":14,"column":17,"nodeType":"130","messageId":"131","endLine":14,"endColumn":28},{"ruleId":"128","severity":1,"message":"133","line":15,"column":9,"nodeType":"130","messageId":"131","endLine":15,"endColumn":15},{"ruleId":"128","severity":1,"message":"134","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"135","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"136","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":36},{"ruleId":"128","severity":1,"message":"137","line":2,"column":38,"nodeType":"130","messageId":"131","endLine":2,"endColumn":44},{"ruleId":"128","severity":1,"message":"138","line":2,"column":46,"nodeType":"130","messageId":"131","endLine":2,"endColumn":50},{"ruleId":"128","severity":1,"message":"139","line":2,"column":52,"nodeType":"130","messageId":"131","endLine":2,"endColumn":60},{"ruleId":"128","severity":1,"message":"140","line":2,"column":62,"nodeType":"130","messageId":"131","endLine":2,"endColumn":71},{"ruleId":"128","severity":1,"message":"141","line":2,"column":73,"nodeType":"130","messageId":"131","endLine":2,"endColumn":81},{"ruleId":"128","severity":1,"message":"142","line":2,"column":83,"nodeType":"130","messageId":"131","endLine":2,"endColumn":92},{"ruleId":"128","severity":1,"message":"143","line":2,"column":94,"nodeType":"130","messageId":"131","endLine":2,"endColumn":106},{"ruleId":"128","severity":1,"message":"144","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":16},{"ruleId":"128","severity":1,"message":"145","line":18,"column":10,"nodeType":"130","messageId":"131","endLine":18,"endColumn":16},{"ruleId":"128","severity":1,"message":"146","line":6,"column":17,"nodeType":"130","messageId":"131","endLine":6,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":11,"column":7,"nodeType":"149","endLine":11,"endColumn":54},{"ruleId":"128","severity":1,"message":"150","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":24},{"ruleId":"128","severity":1,"message":"151","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":26},{"ruleId":"128","severity":1,"message":"152","line":4,"column":28,"nodeType":"130","messageId":"131","endLine":4,"endColumn":40},{"ruleId":"128","severity":1,"message":"153","line":4,"column":42,"nodeType":"130","messageId":"131","endLine":4,"endColumn":57},{"ruleId":"128","severity":1,"message":"154","line":6,"column":15,"nodeType":"130","messageId":"131","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"155","line":6,"column":24,"nodeType":"130","messageId":"131","endLine":6,"endColumn":31},{"ruleId":"128","severity":1,"message":"156","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":24},{"ruleId":"128","severity":1,"message":"151","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":26},{"ruleId":"128","severity":1,"message":"152","line":4,"column":28,"nodeType":"130","messageId":"131","endLine":4,"endColumn":40},{"ruleId":"128","severity":1,"message":"153","line":4,"column":42,"nodeType":"130","messageId":"131","endLine":4,"endColumn":57},{"ruleId":"128","severity":1,"message":"157","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"128","severity":1,"message":"154","line":6,"column":15,"nodeType":"130","messageId":"131","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"155","line":6,"column":24,"nodeType":"130","messageId":"131","endLine":6,"endColumn":31},{"ruleId":"128","severity":1,"message":"156","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":30,"column":9,"nodeType":"149","endLine":30,"endColumn":45},{"ruleId":"128","severity":1,"message":"158","line":12,"column":7,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"128","severity":1,"message":"159","line":33,"column":9,"nodeType":"130","messageId":"131","endLine":33,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":86,"column":21,"nodeType":"149","endLine":86,"endColumn":63},{"ruleId":"128","severity":1,"message":"160","line":6,"column":22,"nodeType":"130","messageId":"131","endLine":6,"endColumn":27},{"ruleId":"128","severity":1,"message":"134","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":14},{"ruleId":"128","severity":1,"message":"135","line":7,"column":16,"nodeType":"130","messageId":"131","endLine":7,"endColumn":25},{"ruleId":"128","severity":1,"message":"136","line":7,"column":27,"nodeType":"130","messageId":"131","endLine":7,"endColumn":36},{"ruleId":"128","severity":1,"message":"137","line":7,"column":38,"nodeType":"130","messageId":"131","endLine":7,"endColumn":44},{"ruleId":"128","severity":1,"message":"138","line":7,"column":46,"nodeType":"130","messageId":"131","endLine":7,"endColumn":50},{"ruleId":"128","severity":1,"message":"139","line":7,"column":52,"nodeType":"130","messageId":"131","endLine":7,"endColumn":60},{"ruleId":"128","severity":1,"message":"140","line":7,"column":62,"nodeType":"130","messageId":"131","endLine":7,"endColumn":71},{"ruleId":"128","severity":1,"message":"141","line":7,"column":73,"nodeType":"130","messageId":"131","endLine":7,"endColumn":81},{"ruleId":"128","severity":1,"message":"161","line":11,"column":5,"nodeType":"130","messageId":"131","endLine":11,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":16,"column":9,"nodeType":"130","messageId":"131","endLine":16,"endColumn":15},{"ruleId":"128","severity":1,"message":"132","line":16,"column":17,"nodeType":"130","messageId":"131","endLine":16,"endColumn":28},{"ruleId":"128","severity":1,"message":"162","line":20,"column":7,"nodeType":"130","messageId":"131","endLine":20,"endColumn":17},{"ruleId":"128","severity":1,"message":"163","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":23},{"ruleId":"128","severity":1,"message":"164","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":12},{"ruleId":"128","severity":1,"message":"165","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":22},{"ruleId":"128","severity":1,"message":"166","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":16,"column":9,"nodeType":"130","messageId":"131","endLine":16,"endColumn":15},{"ruleId":"128","severity":1,"message":"132","line":16,"column":17,"nodeType":"130","messageId":"131","endLine":16,"endColumn":28},{"ruleId":"128","severity":1,"message":"133","line":17,"column":9,"nodeType":"130","messageId":"131","endLine":17,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":62,"column":19,"nodeType":"149","endLine":63,"endColumn":49},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Column' is assigned a value but never used.","Identifier","unusedVar","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Container' is defined but never used.","'CardSubtitle' is defined but never used.","'SideMenu' is defined but never used.","'Footer' is defined but never used.","'className' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'NavbarItem' is defined but never used.","'prototype' is assigned a value but never used.","'days' is assigned a value but never used.","'Space' is defined but never used.","'Pagination' is defined but never used.","'IconSlider' is assigned a value but never used.","'getHomeVideos' is defined but never used.","'Grid' is defined but never used.","'VideoThumbnail' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]