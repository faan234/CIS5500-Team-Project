[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"5","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js":"6","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js":"7","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Header.js":"8"},{"size":988,"mtime":1658947787967,"results":"9","hashOfConfig":"10"},{"size":0,"mtime":1658947787967,"results":"11","hashOfConfig":"10"},{"size":3198,"mtime":1659041899843,"results":"12","hashOfConfig":"10"},{"size":11369,"mtime":1659041278354,"results":"13","hashOfConfig":"10"},{"size":1057,"mtime":1658970521765,"results":"14","hashOfConfig":"10"},{"size":390,"mtime":1659041467580,"results":"15","hashOfConfig":"10"},{"size":871,"mtime":1659041674281,"results":"16","hashOfConfig":"10"},{"size":791,"mtime":1659041684089,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1445w12",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],["36","37"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js",["38"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["39","40","41","42","43","44"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress, Container, CardSubtitle } from \"shards-react\";\nimport SideMenu from '../components/SideMenu';\nimport './TopChannels.css';\n\n//import { FixedSizeList as List } from \"react-window\";\n\nimport {\n    Table,\n    Row,\n    Col,\n    Divider,\n} from 'antd'\n\nimport { getChannel, getFindChannels } from '../fetcher'\n\nconst { Column, ColumnGroup } = Table;\n\nfunction numFormatter(num) {\n    if(num >= 1000 && num < 1000000){\n        return (num/1000).toFixed(1) + 'K'; // convert to K where num >= 1,000 but num < 1 mil\n    }else if(num >= 1000000 && num < 1000000000){\n        return (num/1000000).toFixed(1) + 'M'; // convert to M where num >= 1 mil but num < 1 bil\n    }else if(num >= 1000000000){\n        return (num/1000000000).toFixed(1) + 'B'; // convert to B where num >= 1 bil\n    }else if(num < 900){\n        return num; // if num < 1000, do nothing\n    }\n}\n\nfunction growthFormatter(deci){\n    let newNum = deci;\n    newNum*=100;\n    if (newNum>=0){\n        return \"+\" + newNum.toFixed(1) + \"%\";\n    }else{\n        return newNum.toFixed(1) + \"%\";\n    }\n}\n\nclass TopChannelsPage extends React.Component {\n\n    \n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQuery: \"\",\n            channelsQuery: \"\",\n            selectedQueryResults: [],\n            channelsQueryResults: [],\n            selectedChannelDetails: null\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n        this.executeSelectedSearch = this.executeSelectedSearch.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ selectedQuery: event.target.value })\n    }\n\n    executeChannelSearch() {\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n    }\n\n    executeSelectedSearch(Ranking) {\n        getChannel(Ranking).then(res => {    // \n            this.setState({ selectedQueryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n    }\n\n    componentDidMount() {\n\n        getFindChannels().then(res => {    // \n            this.setState({ channelsQueryResults: res.results })\n        })\n\n        getChannel(1).then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n\n                /* <SideMenu /> */\n\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <h3>Channels</h3>\n                    <Table onRow={(record, rowIndex) => {\n                        return {\n                        onClick: event => {this.executeSelectedSearch(record.Ranking)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                        };\n                        }} dataSource={this.state.channelsQueryResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 10, showQuickJumper:true }}>\n                                \n                                <Column title=\"Ranking\" dataIndex=\"Ranking\" key=\"Ranking\" sorter= {(a, b) => a.Ranking-b.Ranking}/>\n                                <Column title=\"Title\" dataIndex=\"Title\" key=\"Title\" sorter= {(a, b) => a.Title.localeCompare(b.Title)}/>\n                                <Column title=\"Country\" dataIndex=\"country\" key=\"country\" sorter= {(a, b) => a.country.localeCompare(b.country)}/> {/* Need a way to deal with null here...*/}\n                                <Column title=\"Language\" dataIndex=\"language\" key=\"language\" sorter= {(a, b) => a.language.localeCompare(b.language)}/>\n                                \n                                <ColumnGroup title=\"Viewership\">\n                                    <Column title=\"Subscribers\" dataIndex=\"subscribers\" key=\"subscribers\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.subscribers-b.subscribers}/>\n                                    <Column title=\"Total Views\" dataIndex=\"views\" key=\"views\" render={(a)=>numFormatter(a)} sorter= {(a, b) => a.views-b.views}/>\n                                </ColumnGroup>\n                    </Table>\n                </div>\n\n\n\n                {/* Selected Channel will display via below structure */}\n                <Divider />\n                {this.state.selectedChannelDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Container>\n                     <h2 lex={2} style={{ textAlign: 'center' }}>{this.state.selectedChannelDetails.channel_title}</h2>\n                        <Row>\n                            <Col>\n                                <Card style={{ 'border-radius': '1rem 0rem 0rem 1rem', 'background-color':'black'}}>\n                                    <CardBody >\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'center', margin: '0rem', padding: '0rem'}}>\n                                                <h3 className={'cardText cardTitle'}>Statistics</h3>\n                                            </Col>\n\n                                            <Divider className='cardDivider'/>\n                                        \n                                        </Row>\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'center'}}>\n                                                <CardTitle className='cardText'>{\"All Time\"}</CardTitle>\n                                            </Col>\n                                        </Row>\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign:'left'}}>\n                                                <CardSubtitle className='cardText'>Views</CardSubtitle>\n                                            </Col>\n\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                                <CardSubtitle className='cardText'>Subs</CardSubtitle>\n                                            </Col>\n                                        </Row>\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'left' }}>\n                                                <p className='cardText'>{numFormatter(this.state.selectedChannelDetails.views)}</p>\n                                            </Col>\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                                <p className='cardText'>{numFormatter(this.state.selectedChannelDetails.subscribers)}</p>\n                                            </Col>\n                                        </Row>\n\n                                        <Divider className='cardDivider'/>\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'center' }}>\n                                                <CardTitle className='cardText'>{\"Last 3 Months\"}</CardTitle>\n                                            </Col>\n                                        </Row>\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign:'left'}}>\n                                                <CardSubtitle className='cardText'>Views</CardSubtitle>\n                                            </Col>\n\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                                <CardSubtitle className='cardText'>Subs</CardSubtitle>\n                                            </Col>\n                                        </Row>\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'left' }}>\n                                                <p className='cardText'>{numFormatter(this.state.selectedChannelDetails.views_l3m)}</p>\n                                            </Col>\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                                <p className='cardText'>{numFormatter(this.state.selectedChannelDetails.subscribers_l3m)}</p>\n                                            </Col>\n                                        </Row>\n\n                                        {/* <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'left' }}>\n                                            <h5 className='cardText'>Growth</h5>\n                                            </Col>\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                            <h5 className='cardText'>Growth</h5>\n                                            </Col>\n                                        </Row> */}\n\n                                        <Row gutter='30' align='middle' justify='center'>\n                                            <Col flex={2} style={{ textAlign: 'left' }}>\n                                                <p className={this.state.selectedChannelDetails.view_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                    {growthFormatter(this.state.selectedChannelDetails.view_growth_rate_l3m)}\n                                                </p>\n                                            </Col>\n\n                                            <Col flex={2} style={{ textAlign: 'right' }}>\n                                                <p className={this.state.selectedChannelDetails.subscriber_growth_rate_l3m > 0 ? 'posGrowth':'negGrowth'}>\n                                                    {growthFormatter(this.state.selectedChannelDetails.subscriber_growth_rate_l3m)}\n                                                </p>\n                                            </Col>\n                                        </Row>\n\n                                    </CardBody>\n                                </Card>\n                            </Col>\n\n                            <Col flex={2} style={{ textAlign: 'right' , 'border-radius': '0 1rem 1rem 0', 'background-color':'#2f4550'}}>\n                                <h3 flex={2} style={{ textAlign: 'center', color: 'whitesmoke', margin: '1rem 0 1rem 0'}}>Trending Videos</h3>\n                            </Col>\n                        </Row>\n                        \n                    </Container>\n                    \n                    \n                </div> : null}\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/NavbarItem.js",["45","46"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/SideMenu.js",["47","48","49","50","51","52","53"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/Header.js",["54","55","56","57","58","59","60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":13,"column":9,"nodeType":"69","messageId":"70","endLine":13,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"72","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":25},{"ruleId":"67","severity":1,"message":"73","line":2,"column":27,"nodeType":"69","messageId":"70","endLine":2,"endColumn":36},{"ruleId":"67","severity":1,"message":"74","line":2,"column":38,"nodeType":"69","messageId":"70","endLine":2,"endColumn":44},{"ruleId":"67","severity":1,"message":"75","line":2,"column":73,"nodeType":"69","messageId":"70","endLine":2,"endColumn":81},{"ruleId":"76","severity":1,"message":"77","line":89,"column":18,"nodeType":"78","messageId":"79","endLine":91,"endColumn":20},{"ruleId":"67","severity":1,"message":"80","line":6,"column":17,"nodeType":"69","messageId":"70","endLine":6,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":10,"column":7,"nodeType":"83","endLine":10,"endColumn":54},{"ruleId":"67","severity":1,"message":"84","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":24},{"ruleId":"67","severity":1,"message":"85","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":26},{"ruleId":"67","severity":1,"message":"86","line":4,"column":28,"nodeType":"69","messageId":"70","endLine":4,"endColumn":40},{"ruleId":"67","severity":1,"message":"87","line":4,"column":42,"nodeType":"69","messageId":"70","endLine":4,"endColumn":57},{"ruleId":"67","severity":1,"message":"88","line":6,"column":15,"nodeType":"69","messageId":"70","endLine":6,"endColumn":22},{"ruleId":"67","severity":1,"message":"89","line":6,"column":24,"nodeType":"69","messageId":"70","endLine":6,"endColumn":31},{"ruleId":"67","severity":1,"message":"90","line":7,"column":9,"nodeType":"69","messageId":"70","endLine":7,"endColumn":13},{"ruleId":"67","severity":1,"message":"84","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":24},{"ruleId":"67","severity":1,"message":"85","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":26},{"ruleId":"67","severity":1,"message":"86","line":4,"column":28,"nodeType":"69","messageId":"70","endLine":4,"endColumn":40},{"ruleId":"67","severity":1,"message":"87","line":4,"column":42,"nodeType":"69","messageId":"70","endLine":4,"endColumn":57},{"ruleId":"67","severity":1,"message":"91","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":18},{"ruleId":"67","severity":1,"message":"88","line":6,"column":15,"nodeType":"69","messageId":"70","endLine":6,"endColumn":22},{"ruleId":"67","severity":1,"message":"89","line":6,"column":24,"nodeType":"69","messageId":"70","endLine":6,"endColumn":31},{"ruleId":"67","severity":1,"message":"90","line":7,"column":9,"nodeType":"69","messageId":"70","endLine":7,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":30,"column":9,"nodeType":"83","endLine":30,"endColumn":45},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Option' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Progress' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'className' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'NavbarItem' is defined but never used.","no-global-assign","no-unsafe-negation"]