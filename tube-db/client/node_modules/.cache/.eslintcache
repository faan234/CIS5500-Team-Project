[{"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js":"1","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js":"2","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js":"3","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js":"4","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js":"5","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderMenu.js":"6"},{"size":895,"mtime":1658817965607,"results":"7","hashOfConfig":"8"},{"size":3779,"mtime":1658703204671,"results":"9","hashOfConfig":"8"},{"size":681,"mtime":1658813462116,"results":"10","hashOfConfig":"8"},{"size":0,"mtime":1658703204671,"results":"11","hashOfConfig":"8"},{"size":1509,"mtime":1658819661557,"results":"12","hashOfConfig":"8"},{"size":1106,"mtime":1658822309999,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1445w12",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/index.js",[],["29","30"],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TopChannelsPage.js",["31","32"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\n\nimport {\n    Table,\n    Row,\n    Col,\n    Divider,\n} from 'antd'\n\nimport { getChannel } from '../fetcher'\n\nclass TopChannelsPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            channelQuery: \"\",\n            queryResults: [],\n            selectedChannelDetails: null\n        }\n        this.updateChannelSearchBar = this.updateChannelSearchBar.bind(this)\n        this.executeChannelSearch = this.executeChannelSearch.bind(this)\n    }\n\n    updateChannelSearchBar(event) {\n        this.setState({ channelQuery: event.target.value })\n    }\n\n    executeChannelSearch() {\n        getChannel(this.state.channelQuery).then(res => {    // \n            this.setState({ queryResults: res.results })\n            this.setState({ selectedChannelDetails: res.results[0] })\n\n        })\n    }\n\n    componentDidMount() {\n        getChannel(\"neebsgaming\").then(res => {\n            this.setState({ selectedChannelDetails: res.results[0] })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Channel Name</label>\n                            <FormInput placeholder=\"Channel Name\" value={this.state.channelQuery} onChange={this.updateChannelSearchBar} />\n                        </FormGroup></Col>\n                        \n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.executeChannelSearch}>Execute Search</Button>\n                        </FormGroup></Col>\n                    </Row>\n                </Form>\n\n\n                <Divider />\n                {this.state.selectedChannelDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Card>\n                        <CardBody>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                <h5>Channel Title</h5>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                    <h5>Country</h5>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                <h5>Subcribers</h5>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                    <CardTitle>{this.state.selectedChannelDetails.channel_title}</CardTitle>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                <CardTitle>{this.state.selectedChannelDetails.country}</CardTitle>\n                                </Col>\n\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                    <CardTitle>{this.state.selectedChannelDetails.subscribers}</CardTitle>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                    \n                </div> : null}\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default TopChannelsPage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/fetcher.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/TrendingVideosPage.js",[],"/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/pages/HomePage.js",["33","34","35","36"],"import React from 'react';\nimport HeaderMenu from '../components/HeaderMenu';\n\nimport {\n  Table,\n  Select\n} from 'antd'\n\nimport { getAllVideos, getAllChannels } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nconst videoDetails = [\n  {\n    title: 'VideoTitle',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n  },\n  {\n    title: 'TrendingDate',\n    dataIndex: 'TrendingDate',\n    key: 'Date',\n    sorter: (a, b) => a.Date.localeCompare(b.TrendingDate)\n  },\n  {\n    title: 'PublishedAt',\n    dataIndex: 'PublicationTime',\n    key: 'Time',\n    sorter: (a, b) => a.PublicationTime.localeCompare(b.PublicationTime)\n    \n  }\n];\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      videoResults: [],\n      channelResults: []\n    }\n\n    this.goToVideo = this.goToVideo.bind(this)\n    this.goToChannel = this.goToChannel.bind(this)\n  }\n\n\n  goToVideo(videoId) {\n    window.location = `/videos?id=${videoId}`\n  }\n\n  goToChannel(channelId) {\n    window.location = `/channels?id=${channelId}`\n  }\n\n  componentDidMount() {\n    getAllVideos(null, null, null).then(res => {\n      this.setState({ videoResults: res.results })\n    })\n\n    getAllChannels().then(res => {\n      console.log(res.results)\n      this.setState({ channelResults: res.results })\n    })\n\n  }\n\n  render() {\n\n    return (\n        \n      <div>\n        <HeaderMenu />\n      </div>\n    )\n  }\n\n}\n\nexport default HomePage","/Users/zanzhang/Documents/GitHub/CIS5500-Team-Project/tube-db/client/src/components/HeaderMenu.js",["37","38","39","40","41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":73,"nodeType":"49","messageId":"50","endLine":2,"endColumn":81},{"ruleId":"47","severity":1,"message":"51","line":6,"column":5,"nodeType":"49","messageId":"50","endLine":6,"endColumn":10},{"ruleId":"47","severity":1,"message":"52","line":10,"column":9,"nodeType":"49","messageId":"50","endLine":10,"endColumn":15},{"ruleId":"47","severity":1,"message":"53","line":10,"column":17,"nodeType":"49","messageId":"50","endLine":10,"endColumn":28},{"ruleId":"47","severity":1,"message":"54","line":11,"column":9,"nodeType":"49","messageId":"50","endLine":11,"endColumn":15},{"ruleId":"47","severity":1,"message":"55","line":14,"column":7,"nodeType":"49","messageId":"50","endLine":14,"endColumn":19},{"ruleId":"47","severity":1,"message":"56","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":24},{"ruleId":"47","severity":1,"message":"57","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":26},{"ruleId":"47","severity":1,"message":"58","line":4,"column":28,"nodeType":"49","messageId":"50","endLine":4,"endColumn":40},{"ruleId":"47","severity":1,"message":"59","line":4,"column":42,"nodeType":"49","messageId":"50","endLine":4,"endColumn":57},{"ruleId":"47","severity":1,"message":"60","line":6,"column":9,"nodeType":"49","messageId":"50","endLine":6,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":27,"column":11,"nodeType":"63","endLine":27,"endColumn":47},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Progress' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","'videoDetails' is assigned a value but never used.","'useState' is defined but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'Menu' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]